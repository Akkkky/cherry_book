# putsメソッドは戻り値がnilになるが、pメソッドは引数がそのまま戻り値になる
# そのためpメソッドを使うと次のようにターミナルへの出力と変数への代入を一度に行うこともできる
x = 100
y = 50
# x - yの結果をターミナルに出力しつつ、変数answerに代入する
answer = p x - y

# メソッドチェーンを使っている場合は、tapメソッドとprintデバッグを組み合わせる方法もある
# tapメソッドはブロック引数にレシーバをそのまま渡す。ブロックの戻り値は無視され、tapメソッド全体の戻り値はレシーバ自身になる
# ブロック引数のsには、tapメソッドのレシーバ（ここでは文字列の"hello"）が入る
a = 'hello'.tap{ |s| puts "<<#{s}>>" } # => <<hello>>
# tapメソッドはレシーバをそのまま返す（つまりa='hello'と同じ結果になる）
p a # => "hello"